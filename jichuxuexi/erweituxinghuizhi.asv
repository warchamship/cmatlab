%基本绘图函数
% plot()函数
% plot(x,y)创建y中数据对x中对应值的二维线图
%要绘制由线段连接的一组坐标，请将x和y指定为相同长度的向量
%要在同一组坐标区上绘制多组坐标，请将x或y中的至少一个指定为矩阵
% plot(x,y,LineSpec)使用指定的线型、标记和颜色创建绘图
% plot(x1,y1,...,xn,yn)在同一组坐标轴上绘制多对x和y坐标(绘制多条线)。此语法可代替将坐标指定为矩阵的形式
% plot(x1,y1,LineSpec1,...,xn,yn,LineSpecn)可为每个x-y对组指定特定的线型、标记和颜色。可以对某些x-y对组指定LineSpec,而对其他对组省略它。
%例如plot(x1,y1,"o",x2,y2)对第一个x-y对组指定标记，但没有对第二个对组指定标记。

x=[1:9];
y=[2:10];
plot(x,y);
y1=x.^2;
plot(x,y1);
X=x+y*i;
plot(X);  %以复数的实部为x，以虚部为y画图

%当x和y为矩阵时
t=0:0.01:2*pi;
t=t.'; %对向量t进行转置
x=[t,t,t]  % x是n行三列的矩阵，每一列都是向量t
y=[sin(t),sin(2*t),sin(0.5*t)]  % y是与x相同的n行三列的矩阵，每一列都是以t为自变量的sin函数值
plot(x,y);  %分别以x和y为横坐标和纵坐标，画出的其实就是以t为自变量，sin的函数图像

%用plot(x1,y1,x2,y2,...,xn,yn)绘制多条曲线
% y=linspace(x1,x2)函数，返回包含x1和x2之间的默认为100个等间距点的行向量
% y=linspace(x1,x2,n)生成n个点，这些点的间距为(x2-x1)/(n-1)
% linspace类似于冒号运算符“：”,但可以直接控制点数并始终包括端点
x1=linspace(0,2*pi,10);   
x2=linspace(0,2*pi,20);
x3=linspace(0,2*pi,200);    %绘制曲线，间隔越小，曲线越光滑
y1=sin(x1);
y2=sin(x2)+2;
y3=sin(x3)+4;
plot(x1,y1,':g',x2,y2,x3,y3); %设置y1曲线为':'虚线，'g'绿色

% fplot()函数
% fplot(f)在默认区间[-5,5](对于x)绘制由函数y=f(x)定义的曲线
% fplot(f,xinterval)将在指定区间绘图。将区间指定为[xmin,xmax]形式的二元素向量
% fplot(funx,funy)在默认区间[-5,5](对于t)绘制由x=funx(t)和y=funy(t)定义的曲线
% fplot(funx,funy,tinterval)将在指定区间绘图。将区间指定为[tmin,tmax]形式的二元素向量
% fplot(__,LineSpec)指定线型、标记符号和线条颜色。例如，'-r'绘制一根红色线条。在上述语法中的任何输入参数组合后使用此选项
fplot(@(x)sin(1./x),[0,0.2]);  %函数sin(1/x)在区间[0,0.2]上的图像
x=0:0.005:0.2;
y=sin(1./x);
plot(x,y);
% plot绘制函数时是根据点与点之间连线来绘制的，所以间隔会影响函数图像的样子；而fplot绘制函数时则不是描点，更像是知道函数图像长什么样
fplot(@(t)t*sin(t),@(t)t*cos(t),[0,10*pi],'-r');  %参数方程，横纵坐标分别是x=t*sin(t)、y=t*cos(t)

%其他坐标系的二维曲线
%对数坐标图
% semilogx(x,y)在x轴上使用以10为底的对数刻度、在y轴上使用线性刻度来绘制x和y坐标
%要绘制由线段连接的一组坐标，将x和y指定为相同长度的向量
%要在同一组坐标区上绘制多组坐标，将x或y中的至少一个指定为矩阵
% semilogx(x,y,LineSpec)使用指定的线型、标记和颜色创建绘图
x=logspace(-1,2);
y=x;
semilogx(x,y); %横坐标是以10为底的对数坐标log10^x,纵坐标是10^x
%极坐标图
% polarplot(theta,rho)在极坐标中绘制线条，由theta表示弧度角，rho表示每个点的半径值。输入必须为长度相等的向量或大小相等的矩阵。如果输入为矩阵，polarplot
%将绘制rho的列对theta列的图。也可以一个输入为向量，另一个为矩阵，但向量的长度必须与矩阵的一个维度相等
% polarplot(theta,rho,LineSpec)设置线条的线型、标记符号和颜色
theta=0:0.01:2*pi;
rho=sin(theta).*cos(theta);
polarplot(theta,rho);

%统计图
%条形图
% bar(y)创建一个条形图，y中的每个元素对应一个条形
%要绘制单个条形序列，将y指定为长度为m的向量。将这些条形沿x轴从1到m依次放置
%要绘制多个条形序列，将y指定为矩阵，每个序列对应一列
% bar(x,y)在x指定的位置绘制条形
x=1:5;
bar(x);
x1=[2021,2022,2023];
y=[10,20;20,30;100,200];  %每个序列对应一列(10,20,100)和(20,30,200)
bar(x1,y);
%直方图
% histogram(x)基于x创建直方图。histogram函数使用自动分bin算法，然后返回均匀宽度的bin，这些bin可涵盖x中的元素范围并显示分布的基本形状
% histogram将bin显示未矩形条，这样每个矩形的高度就表示bin中的元素数量
% histogram(x,nbins)指定bin的数量
%例题：对分类为25个等间距bin的1000个随机数绘制直方图。求bin计数
x=randi(1000,1000,1);
nbins=25;
h=histogram(x,nbins);   %根据随机数的范围划分为25个等区间，每个区间的高度就是落在那个区间中随机数的个数
counts=h.Values;     %统计每个bin的随机数
%面积类图形
% pie(x)使用x中的数据绘制饼图。饼图的每个扇区代表x中的一个元素
%如果sum(x)<=1,x中的值直接指定饼图扇区的面积。如果sum(x)<1，pie仅绘制部分饼图
%如果sum(x)>1，则pie通过x/sum(x)对值进行归一化，以确定饼图的每个扇区的面积
%如果x为categorical数据类型，则扇区对应类别。每个扇区的面积是类别中的元素数除以x中的元素数的结果
% pie(x,explode)将扇区从饼图偏移一定位置。explode是一个由与x对应的零值和非零值组成的向量或矩阵。pie函数仅将对应于explode中的非零元素的扇区偏移一定的位置
%如果x为categorical数据类型，则explode可以是由对应与类别的零值和非零值组成的向量，或者是由要偏移的类别名称组成的元胞数组
x=1:2:9;
pie(x);
%散点类图形
% scatter(x,y)在向量x和y指定的位置创建一个包含圆形标记的散点图
%要绘制一组坐标，将x和y指定为等长向量
%要在同一组坐标区上绘制多组坐标，将x或y中的至少一个指定为矩阵
% scatter(x,y,sz)指定圆圈大小。要求对所有圆使用相同大小，将sz指定为标量，要绘制不同大小的每个圆，请将sz指定为向量或者矩阵
% scatter(x,y,sz,c)指定圆颜色。可以为所有圆指定一种颜色，也可以更改颜色。例如，可以通过将c指定为"red"来绘制所有红色圆
% scatter(__,"filled")填充圆，可将"filled"选项与上述语法中的任何输入参量组合一起使用
% scetter(___,mkr)指定标记类型
% 例题：画一颗爱心
t=0:pi/50:2*pi;
x=16*sin(t).^3;
y=13*cos(t)-5*cos(2*t)-2*cos(3*t)-cos(4*t);
scatter(x,y,10,"red","filled");
%矢量类图形
% quiver(x,y,u,v)在由x和y指定的笛卡尔坐标上绘制具有定向分量u和v的箭头。例如，第一个箭头源于点x(1)和y(1),按u(1)水平延伸,按v(1)垂直延伸。默认情况下,quiver函数
%缩放箭头长度，使其不重叠 矢量的起点是(x1,y1),终点是(u1,v1)
% quiver(u,v)在等距点上绘制箭头，箭头的定向分量由u和v指定
%如果u和v是向量，则箭头的x坐标范围是从1到u和v中的元素数，并且y坐标均为1
%如果u和v是矩阵，则箭头的x坐标范围是从1到u和v中的列数，箭头的y坐标范围是从1到u和v中的行数
a=[4,5];
quiver(0,0,a(1),a(2));
u=2:5;
v=3:6;
quiver(u,v);

%图形属性设置
%线型、标记和颜色
%指定为包含符号的字符串标量或字符向量。符号可以按任意顺序显示。例"--or"是带有圆形标记的红色虚线
%不需要同时指定所有三个特征(线型、标记和颜色)。例如，如果忽略线型，只指定标记，则绘图只显示标记，不显示线条
% "-"实线 "--"虚线 ":"点线  "-."点划线
% "r"红 "g"绿 "b"蓝 "c"青 "m"洋红 "y"黄 "k"黑 "w"白

%图形标注
% title(图形标题)
% xlabel(x轴说明)
% ylabel(y轴说明)
% text(x,y,图形说明)
% legend(图例1，图例2，...)

%坐标控制
% axis函数
% axis([xmin,xmax,ymin,ymax,zmin,zmax])指定当前坐标区的范围
% axis的其他用法：
% axis equal:横纵坐标轴采取等长刻度
% axis square:产生正方形坐标系(默认为矩形)
% axis auto:使用默认设置
% axis off:取消坐标轴
% axis on:显示坐标轴
%给坐标加上网格
% grid on:控制显示网格线
% grid off:控制不显示网格线
% grid:用于在两种状态之间进行切换
%程序中没有grid命令，默认是无网格线
%例子：绘制sinx、sin2x、sin(x/2)的函数曲线并添加图形标注
x=linspace(0,2*pi,200);
y=[sin(x);sin(2*x);sin(0.5*x)];
plot(x,y);
axis([0,6.5,-1.5,1.5]);  %改变横纵坐标的范围
title('三个正弦函数曲线y=sin{\theta}','FontSize',24);  %{\theta}--θ的latet形式
xlabel('X');
ylabel('Y');   %给x和y轴加上坐标轴说明
text(2.5,sin(2*2.5),'sin(2x)');   %在指定点上加注释
legend('sin(x)','sin(2x)','sin(0.5x)')  %对图线进行说明

%图形保持
% hold on:控制保持原有图形
% hold off:控制舒心图形窗口
% hold on:用于在两种状态之间进行切换
%例子：用图形保持功能绘制两个同心圆
t=linspace(0,2*pi,200);
x=sin(t);
y=cos(t);
plot(x,y,'b');
axis equal
hold on
x=2*sin(t);
y=2*cos(t);

