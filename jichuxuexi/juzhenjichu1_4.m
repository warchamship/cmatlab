%矩阵的创建
%在matlab中，矩阵的创建方法主要有三种，分别是：直接输入法、创建函数法和导入本地文件中的数据
%1、直接输入法：适用于矩阵中元素数量较少的情况
%输入矩阵时要以中括号[]作为标识符号，矩阵的所有元素必须都在中括号内。矩阵的同行元素之间用空格或逗号分隔，行与行之间用分号或回车分隔。
a1=[1,2,3;4,5,6];%元素之间用空格分开也行
a2=[1,2,3
    4,5,6];
%2、函数创建法：matlab提供的用来生成某些特定的矩阵的函数，常用函数：
%第一组函数：zeros、ones和eye。这三个函数分别用来创建全为0的矩阵、全为1的矩阵和单位矩阵
%第二组函数：rand、randi和randn。这三个函数分别用来创建均匀分布的随机数(0-1)、均匀分布的随机整数和标准正态分布的随机数
b1=zeros(10);%zeros（行数，列数），当为方阵时只输入一个数字即可
b2=ones(10);
b3=eye(10);
b4=rand(10);
b5=randi([1,6],3,3);%randi([imin,imax],m,n),取值范围为imin-imax,m行n列的随机整数矩阵
b6=randn(5,6);
%3、导入本地文件中的数据
%txt、.dat或.csv（适用于带分隔符的文本文件）
%xls、.xlsb、.xlsm、.xlsx、.xltm、.xltx或.ods(适用于电子表格文件）


%矩阵元素的修改删除
%1、矩阵元素的修改：
%直接利用等号赋值的方法对矩阵中引用位置的元素进行修改
%使用线性索引（单下标的索引）的方式对矩阵的元素进行修改
%注意：如果你在赋值时将一个或多个元素置于矩阵现有的行和列索引的边界之外，则会将矩阵的大小进行拓展，matlab会将没有赋值的位置的元素自动用0填充，使其保持为完整的矩形
c1=[1:4;2:5;3:6];%从n到m，步长为1取元素
c1(2,3)=10;%将第2行第三列处的元素修改为10，（m,n)索引第m行第n列的元素
c1(3,:)=8;%将第三行的元素都修改为8
c1([1,3],[1,2])=0;%修改第一行第一二列的元素为0，修改第三行第一二列的元素为0
c1(1,[1,2])=1;%修改第一行第一二列的元素为1
c2=[1:4;2:5;3:6];
c2(3)=9;%将矩阵从第一列起案列往下排序的第三个元素（即第三行第一列的元素）修改为9。线性索引是按列由上往下将矩阵所有元素进行排序
c2(4,4)=10;%在矩阵第四行第四列处插入10.由于矩阵原来是三行四列，四行四列超出边界，其余位置会自动补充为0
%2、矩阵元素的删除
%如果我们将等号右侧变成空向量[]，则可以删除对应位置的元素。需要注意的是，通常只能删除矩阵的整行或者整列，否则会报错
%也可以通过线性索引来删除矩阵的元素。使用线性索引删除后，matlab会将矩阵中剩下的元素按照线性索引的顺序放入到一个向量中。另外，使用线性索引可以删除任意位置的元素，
%不需要删除矩阵的一整行或者一整列
c3=[1:4;2:5;3:6];
c3(:,1)=[];%删除第一列的元素
c3(:,[1,end])=[];%删除第一列和最后一列的元素
c4=[1:4;2:5;3:6];
c4(1)=[];%删除单个元素只能用线性索引删除，剩余矩阵元素会按照线性索引的顺序自动变成一个向量

%矩阵的拼接重构重排
%1、矩阵的拼接（不限于拼接个数）：
%横向拼接：A和B的行数相同，那么使用[A,B]、[A B]以及cat(2,A,B)都能将A和B横向拼接成一个大的矩阵
%纵向拼接：A和B的列数相同，那么使用[A;B]以及cat(1,A,B)都能将A和B纵向拼接成一个大的矩阵
d1=[1:4;2:5;3:6];
d2=ones(3,4);
d3=eye(3,4);
[d1,d2]%横向拼接，逗号换成空格也可以
[d2,d1]%顺序不同，拼接前后顺序也不同
cat(2,d1,d3)
[d1;d2]%纵向拼接
cat(1,d1,d3)
%矩阵的重构重排：
%reshape函数：更改矩阵的形状，reshape(A,m,n)或者reshape(A,[m,n]),按照原矩阵线性索引顺序排序
%sort函数：对向量或者矩阵进行排序，sort(A,dim),在最后面加一个输入参数'descend'，变成从大到小的降序排列
%dim=1时，沿着行方向（从上至下）对矩阵的每一列升序排列；dim=2时，沿着列方向（从左至右）对矩阵的每一行升序排列
%sortrows函数：基于矩阵的某一列对矩阵进行排序，同一行的元素不会改变。
%sortrows(score,列),在最后面加一个参数'descend',变成从大到小的降序排列
e1=randi([1,10],2,6);
e2=reshape(e1,3,4);%将2行6列矩阵e1重构重排为3行4列的矩阵e2;重构后的列数和行数只需要预先给出一个就可以，剩余一个给出空值[]即可，matlab可以自行计算出
e1(:);%按线性索引逐一列出元素
e2(:);
e3=randi([1,10],2,6)
sort(e3,1);%按列升序排
sort(e3,2);%按行升序排
sort(e3,1,'descend');%按列降序排
sort(e3,2,'descend');%按行降序排
sortrows(e3,2)%对第二列进行升序排列
sortrows(e3,2,'descend')%对第二列进行降序排列，同一行的元素不会改变就是所在列的某一行的元素变了位置，所在行要跟着变


%%矩阵的运算 (双%只运行这一节内容，ctrl+enter)
%1、矩阵的算术运算
%1.1调用函数运算
%sum函数
f1=randi(10,3,4)
sum(f1,1);%按列加和
sum(f1,2);%按行加和
sum(f1(:));%所有元素加和，sum(sum(f1))、sum(f1,"all")同理
%prod（product)函数，求乘积函数，用法与sum类似
prod(f1,1)
prod(f1,2)
prod(f1(:))
%cumsum计算累积和(cumulative sum)
%diff计算差分(difference)
%mean计算平均值
%median计算中位数
%mode计算众数
%var计算方差(variance)
%std计算标准差(standard deviation)
%min求最小值(minimum value)
%max求最大值（maximum value)
%1.2矩阵加减
%兼容模式：不一定是完全相同的两个矩阵才能进行加减运算，常数、列向量、行向量都会自动补成和已知矩阵行列数相同的矩阵进行运算
%1.3矩阵乘除乘方
%*乘表示矩阵相乘;.*点乘表示两个矩阵中对应元素相乘
g1=randi(10,4,4)
g2=randi(10,4,3)
g3=randi(10,1,4)
g1*g2;%矩阵相乘
g1.*g3;%矩阵对应元素相乘，g3先自动补充为4行4列，再对应元素和g1相乘
%/右除、\左除
%./点除两个矩阵对应元素相除
g1./g3;
%^乘方 .^点乘方
g1^3%方阵才有乘方运算，g1*g1*g1
g1.^g3%对应元素，以g1中元素为底，g3中元素为指数
%矩阵的转置'('复数转置行列互换的同时，对应元素变为共轭复数；.'则只是将行列互换)
h1=randi(5,3,4);
h1';
h2=[1,2-i,3+i;2,1+i,1-i]
h2'
h2.'
%2、矩阵的关系运算
%==等于、~=不等于、>大于、>=大于等于、<小于、<=小于等于
%关系运算符可以用来比较两个数组中元素的关系，如果比较的结果为真，则会返回逻辑值；如果结果为假，则会返回逻辑值0
i1=[1:4]
i2=ones(3,4)
i1==i2%逐个比较对应元素，若在该位置上的两个对应元素相同，则在该位置上返回1，否则返回0
%其他关系运算符原理同上
