%步骤一：选择函数零点所在的初始区间[a,b]确保f(a)*f(b)<0
%步骤二：计算区间的中点c=(a+b)/2，并计算函数在c处的值f(c)
% 步骤三：如果f(c)的值恰好等于零，或者f(c)的绝对值小于某个给定的误差阈值，
% 那么c就可以当成零点，迭代结束
%步骤四：如果f(c)与零点的差异较大，那么需要根据f(c)的正负号，将原来包含零
% 点的区间[q,b]更换为[a,c]或[c,b]，确保零点仍然在新的区间内(例如：f(a)*f(c)<0则更换为[a,c])。
%步骤五：重复步骤2到4，知道找到零点或者达到需要的精度停止迭代。
%下面看一个具体的题目：函数f(x)=x³-8x²+x-5，f(x)在区间[6,10]严格单调递增且f(6)<0,f(10)>0,请用二分法搜索零点x0(f(x0)和0的误差控制在le-8内即可)

a=6;
b=10;
eps=le-8;  %误差阈值10的负8次方
while 1
    c=(a+b)/2;
    fc=c^3-8*c^2+c-5;
    if abs(fc)<eps
        break
    end
    fa=a^3-8*a^2+a-5;
    if fa*fc<0  
        b=c;   %如果fa*fc小于0，把b更新为c
    else
        a=c;
    end
end
x0=c;
x0